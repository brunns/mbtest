[tox]
envlist = py38,py39,py310,py311,pypy3.8

[testenv]
deps =
    lovely-pytest-docker>=0.3.1
    docker-compose>=1.29

whitelist_externals =
    find
    sed
    bash
extras =
    test
commands =
    {posargs:py.test} tests/unit/ tests/integration/
passenv = *
usedevelop=True

[testenv:coverage]
envlist = py311
extras =
    test
    coverage
commands =
    pytest --cov {envsitepackagesdir}/mbtest --durations=10 --cov-report term-missing --cov-fail-under 100 --basetemp={envtmpdir} {posargs}
usedevelop=False

[testenv:publish-coverage]
envlist = py311
passenv = CODACY_*
extras =
    test
    coverage
commands =
    pytest --cov {envsitepackagesdir}/mbtest --cov-report xml --cov-fail-under 100 --basetemp={envtmpdir} {posargs}
    sed -i 's/\/home\/travis\/build\/brunns\/mbtest\/.tox\/publish-coverage\/lib\/python3..\/site-packages/src/g' coverage.xml
    bash -c "python-codacy-coverage -r coverage.xml || true"
usedevelop=False

[coverage:run]
branch = True
omit = */matcher.py

[testenv:flake8]
basepython = python3
skip_install = true
deps =
    flake8~=3.0
    flake8-bugbear~=18.0
    flake8-comprehensions~=1.0
    flake8-mutable~=1.0
    mccabe~=0.6
    flake8-blind-except~=0.1
    flake8-builtins~=1.0
    flake8-pep3101~=1.0
    flake8-print~=3.0
    flake8-string-format~=0.2
    flake8-logging-format~=0.5
    flake8-colors~=0.1
    flake8-comprehensions~=1.0

commands =
    flake8 src/ tests/

[flake8]
max-complexity = 5
max-line-length = 120
show-source = True
enable-extensions = M,B,C
ignore = C812,W503,P103,E1,E2,E3,E5,E731
statistics = True

[testenv:bandit]
basepython = python3
skip_install = true
deps =
    bandit~=1.5
commands =
    bandit -r src/

[testenv:pylint]
basepython = python3
extras =
    test
    install
deps =
    pylint~=2.2
commands =
    pylint --disable=C src/

[testenv:refurb]
basepython = python3
deps =
    refurb>=1.0
commands =
    refurb src/ {posargs}
usedevelop=False

[testenv:mypy]
basepython = python3
skip_install = false
extras =
    test
    install
deps =
    mypy~=0.942
    types-requests
commands =
    mypy src/ {posargs}

[testenv:pyright]
basepython = python3
skip_install = false
extras =
    test
    install
deps =
    pyright==1.1.274
    types-requests
commands =
    pyright src/ {posargs}

[testenv:safety]
basepython = python3
deps =
    safety>=2.0
commands =
    safety check
usedevelop=False

[testenv:pipdeptree]
basepython = python3
deps =
    pipdeptree
commands =
    pipdeptree
usedevelop=False

[testenv:pydeps]
basepython = python3
deps =
    pydeps
commands =
    pydeps src/mbtest --cluster --rmprefix mbtest.
usedevelop=False

[testenv:mutmut]
basepython = python3
extras =
    test
deps =
    mutmut
commands =
    mutmut {posargs}

[testenv:mutmut-single]
whitelist_externals =
    rm
    killall
commands_post =
    - rm -r .mbdb
    - killall node

[testenv:piprot]
basepython = python3
deps =
    piprot
commands =
    piprot
usedevelop=False

[testenv:format]
basepython = python3
skip_install = true
deps =
    black>=22.1
    isort>=5.0
commands =
    isort {toxinidir}/setup.py
    isort {toxinidir}/src/
    isort {toxinidir}/tests/
    black -l100 -tpy37 src/ tests/ setup.py

[testenv:check-format]
basepython = python3
skip_install = true
deps = {[testenv:format]deps}
commands =
    isort --check-only {toxinidir}/setup.py
    isort --check-only {toxinidir}/src/
    isort --check-only {toxinidir}/tests/
    black --check -l100 -tpy37 src/ tests/ setup.py

[tool:isort]
multi_line_output=3
include_trailing_comma=True
force_grid_wrap=0
use_parentheses=True
line_length=100

[testenv:docs]
description = Invoke sphinx-build to build the HTML docs
basepython = python3
extras =
    install
    docs
commands = sphinx-build docs "{toxinidir}/build_docs" --color -W -bhtml {posargs}
           python -c 'import pathlib; print("documentation available under file://\{0\}".format(pathlib.Path(r"{toxinidir}") / "build_docs" / "index.html"))'
