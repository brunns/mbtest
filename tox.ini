[tox]
envlist = py39,py310,py311,py312,py313,pypy3.10

[testenv]
deps =
    pytest-docker~=3.1

allowlist_externals =
    find
    sed
    bash
extras =
    test
commands =
    {posargs:py.test} tests/unit/ tests/integration/ -o log_cli=true
passenv =
    GITHUB_*
    MBTEST_*
usedevelop=True

[testenv:coverage]
envlist = py313
extras =
    test
    coverage
commands =
    pytest --cov {envsitepackagesdir}/mbtest --durations=10 --cov-report term-missing --cov-fail-under 100 --basetemp={envtmpdir} {posargs}
usedevelop=False

[testenv:publish-coverage]
envlist = py313
passenv = CODACY_*
extras =
    test
    coverage
commands =
    pytest --cov {envsitepackagesdir}/mbtest --cov-report xml --cov-fail-under 100 --basetemp={envtmpdir} {posargs}
    sed -i 's/\/home\/travis\/build\/brunns\/mbtest\/.tox\/publish-coverage\/lib\/python3..\/site-packages/src/g' coverage.xml
    bash -c "python-codacy-coverage -r coverage.xml || true"
usedevelop=False

[coverage:run]
branch = True
omit = */matcher.py

[testenv:mypy]
basepython = python3
skip_install = false
extras =
    test
    install
deps =
    mypy~=0.942
    types-requests
commands =
    mypy src/ {posargs}

[testenv:pyright]
basepython = python3
skip_install = false
extras =
    test
    install
deps =
    pyright==1.1.391
    types-requests
commands =
    pyright src/ {posargs}

[testenv:pipdeptree]
basepython = python3
deps =
    pipdeptree
commands =
    pipdeptree
usedevelop=False

[testenv:pydeps]
basepython = python3
deps =
    pydeps
commands =
    pydeps src/mbtest --cluster --rmprefix mbtest.
usedevelop=False

[testenv:mutmut]
basepython = python3
extras =
    test
deps =
    mutmut
commands =
    mutmut {posargs}

[testenv:mutmut-single]
allowlist_externals =
    rm
    killall
commands_post =
    - rm -r .mbdb
    - killall node

[testenv:piprot]
basepython = python3
deps =
    piprot
commands =
    piprot
usedevelop=False

[testenv:format]
basepython = python3
skip_install = true
deps =
    ruff
commands =
    ruff format  .
    ruff check . --fix-only

[testenv:check-format]
basepython = python3
skip_install = true
deps = {[testenv:format]deps}
commands =
    ruff format . --check
    ruff check  .

[tool:isort]
multi_line_output=3
include_trailing_comma=True
force_grid_wrap=0
use_parentheses=True
line_length=100

[testenv:docs]
description = Invoke sphinx-build to build the HTML docs
basepython = python3
extras =
    install
    docs
commands = sphinx-build docs "{toxinidir}/build_docs" --color -W -bhtml {posargs}
           python -c 'import pathlib; print("documentation available under file://\{0\}".format(pathlib.Path(r"{toxinidir}") / "build_docs" / "index.html"))'
